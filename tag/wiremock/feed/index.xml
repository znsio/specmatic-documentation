<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>wiremock &#8211; Specmatic</title>
	<atom:link href="https://specmatic.io/tag/wiremock/feed/" rel="self" type="application/rss+xml" />
	<link>https://specmatic.io/</link>
	<description>Contract Driven Development simplified</description>
	<lastBuildDate>Fri, 18 Oct 2024 04:27:08 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.7.1</generator>

<image>
	<url>https://specmatic.io/wp-content/uploads/2022/09/Favicon.png</url>
	<title>wiremock &#8211; Specmatic</title>
	<link>https://specmatic.io/</link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>WireMock&#8217;s Dirty Secret: Ignoring API Specs &#038; Letting Invalid Examples Slip Through </title>
		<link>https://specmatic.io/updates/wiremocks-dirty-secret-ignoring-api-specs-letting-invalid-examples-slip-through/</link>
		
		<dc:creator><![CDATA[Hari Krishnan]]></dc:creator>
		<pubDate>Wed, 16 Oct 2024 02:29:12 +0000</pubDate>
				<category><![CDATA[Demonstration]]></category>
		<category><![CDATA[Updates]]></category>
		<category><![CDATA[wiremock]]></category>
		<guid isPermaLink="false">https://specmatic.io/?p=5871</guid>

					<description><![CDATA[Overcoming the Challenges of Hand-Rolled Mocks with Contract-Driven Development  APIs and microservices have transformed the way software systems are built and maintained. However, developing a system that relies on multiple services—both internal and external—presents unique challenges, especially when some services are not fully available. In this critique of WireMock, we examine the critical importance of [&#8230;]]]></description>
		
		
		
			</item>
		<item>
		<title>Comparison: Specmatic vs WireMock</title>
		<link>https://specmatic.io/comparisons/comparison-specmatic-vs-wiremock/</link>
		
		<dc:creator><![CDATA[Hari Krishnan]]></dc:creator>
		<pubDate>Sat, 26 Nov 2022 08:34:32 +0000</pubDate>
				<category><![CDATA[Comparisons]]></category>
		<category><![CDATA[Updates]]></category>
		<category><![CDATA[api mocking]]></category>
		<category><![CDATA[Contract Driven Development]]></category>
		<category><![CDATA[Contract Testing]]></category>
		<category><![CDATA[OpenAPI]]></category>
		<category><![CDATA[Specmatic]]></category>
		<category><![CDATA[wiremock]]></category>
		<guid isPermaLink="false">https://specmatic.io/?p=820</guid>

					<description><![CDATA[API mocking is only effective if the mocks are truly representative of the provider / services they are emulating. Deviations between mocks and providers can lead to integration issues much later in the development cycle. In order to avoid such issues it is important to keep in mind that selecting an API mocking tool is not an isolated decision. It has to be in line with your overall microservices development, testing and deployment goals.]]></description>
		
		
		
			</item>
	</channel>
</rss>
