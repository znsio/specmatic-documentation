<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>Hari Krishnan &#8211; Specmatic</title>
	<atom:link href="https://specmatic.io/author/hari/feed/" rel="self" type="application/rss+xml" />
	<link>https://specmatic.io/</link>
	<description>Contract Driven Development simplified</description>
	<lastBuildDate>Fri, 18 Oct 2024 04:29:21 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.7.1</generator>

<image>
	<url>https://specmatic.io/wp-content/uploads/2022/09/Favicon.png</url>
	<title>Hari Krishnan &#8211; Specmatic</title>
	<link>https://specmatic.io/</link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>Pact&#8217;s Dependency Drag​: Why Consumer-Driven Contracts Don&#8217;t Support Parallel Development</title>
		<link>https://specmatic.io/updates/pacts-dependency-drag-why-consumer-driven-contracts-dont-support-parallel-development/</link>
		
		<dc:creator><![CDATA[Hari Krishnan]]></dc:creator>
		<pubDate>Fri, 18 Oct 2024 04:05:22 +0000</pubDate>
				<category><![CDATA[Demonstration]]></category>
		<category><![CDATA[Updates]]></category>
		<category><![CDATA[pact]]></category>
		<guid isPermaLink="false">https://specmatic.io/?p=5898</guid>

					<description><![CDATA[Exploring the challenges and limitations of using Pact for contract testing in a microservices environment.  In the domain of microservices, ensuring seamless communication between different services is paramount. This necessitates robust contract testing to ensure that APIs and their consumers are in sync. With an increasing number of organizations adopting microservices, tools like Pact—a consumer-driven [&#8230;]]]></description>
		
		
		
			</item>
		<item>
		<title>WireMock&#8217;s Dirty Secret: Ignoring API Specs &#038; Letting Invalid Examples Slip Through </title>
		<link>https://specmatic.io/updates/wiremocks-dirty-secret-ignoring-api-specs-letting-invalid-examples-slip-through/</link>
		
		<dc:creator><![CDATA[Hari Krishnan]]></dc:creator>
		<pubDate>Wed, 16 Oct 2024 02:29:12 +0000</pubDate>
				<category><![CDATA[Demonstration]]></category>
		<category><![CDATA[Updates]]></category>
		<category><![CDATA[wiremock]]></category>
		<guid isPermaLink="false">https://specmatic.io/?p=5871</guid>

					<description><![CDATA[Overcoming the Challenges of Hand-Rolled Mocks with Contract-Driven Development  APIs and microservices have transformed the way software systems are built and maintained. However, developing a system that relies on multiple services—both internal and external—presents unique challenges, especially when some services are not fully available. In this critique of WireMock, we examine the critical importance of [&#8230;]]]></description>
		
		
		
			</item>
		<item>
		<title>Specmatic Docker Image now available</title>
		<link>https://specmatic.io/updates/specmatic-docker-image/</link>
		
		<dc:creator><![CDATA[Hari Krishnan]]></dc:creator>
		<pubDate>Fri, 23 Feb 2024 03:12:41 +0000</pubDate>
				<category><![CDATA[Feature Spotlight]]></category>
		<category><![CDATA[Updates]]></category>
		<guid isPermaLink="false">https://specmatic.io/?p=4423</guid>

					<description><![CDATA[Specmatic is now available as a Docker image! Turn your API specifications into executable contracts in seconds. Your favorite features such as contract tests, intelligent service virtualization, backward compatibility testing and more are all available through Specmatic Docker image. Getting started has never been easier. Get the Docker Image Now: https://hub.docker.com/r/znsio/specmatic Getting started in 5 [&#8230;]]]></description>
		
		
		
			</item>
		<item>
		<title>Break the Chains of Database Dependencies: Leveraging Specmatic for JDBC Stubbing</title>
		<link>https://specmatic.io/demonstration/jdbc-stubbing-with-specmatic-contract-testing/</link>
		
		<dc:creator><![CDATA[Hari Krishnan]]></dc:creator>
		<pubDate>Mon, 14 Aug 2023 10:23:30 +0000</pubDate>
				<category><![CDATA[Demonstration]]></category>
		<category><![CDATA[Feature Spotlight]]></category>
		<category><![CDATA[Updates]]></category>
		<category><![CDATA[Contract Driven Development]]></category>
		<category><![CDATA[Contract Testing]]></category>
		<category><![CDATA[JDBC]]></category>
		<category><![CDATA[Stubbing]]></category>
		<guid isPermaLink="false">https://specmatic.io/?p=1742</guid>

					<description><![CDATA[With Specmatic JDBC stub, you can easily test APIs without the need for a complex database setup. By switching out the real database with a Specmatic JDBC stub, we can set expectations for the stub to respond to specific queries. These expectations can be recorded based on actual interactions. Once the expectations are set, we no longer need the database for our tests!]]></description>
		
		
		
			</item>
		<item>
		<title>Comparison: Specmatic vs Spring Cloud Contract</title>
		<link>https://specmatic.io/comparisons/comparison-specmatic-vs-spring-cloud-contract/</link>
		
		<dc:creator><![CDATA[Hari Krishnan]]></dc:creator>
		<pubDate>Sat, 03 Dec 2022 07:26:49 +0000</pubDate>
				<category><![CDATA[Comparisons]]></category>
		<category><![CDATA[Updates]]></category>
		<category><![CDATA[Consumer Driven Contract]]></category>
		<category><![CDATA[Contract Driven Development]]></category>
		<category><![CDATA[Contract Testing]]></category>
		<category><![CDATA[Integration Testing]]></category>
		<category><![CDATA[microservices]]></category>
		<category><![CDATA[OpenAPI]]></category>
		<category><![CDATA[Provider Driven Contract]]></category>
		<category><![CDATA[Specmatic]]></category>
		<category><![CDATA[Spring Cloud Contract]]></category>
		<guid isPermaLink="false">https://specmatic.io/?p=881</guid>

					<description><![CDATA[With Spring Cloud Contract we can start by authoring the API contract in one of the supported DSLs, based on which the provider / producer is verified and in the process stubs are generated for consumers. This makes it possible to leverage it as both a "consumer driven" or "provider driven" contract testing tool. There are also some interesting points about how we share contracts and stubs (through artifact managers, source control, etc.) with Spring Cloud Contract. Let us look at the detailed comparison between Specmatic and Spring Cloud Contract. Please do leave a comment if there are other areas of comparison on which you would like to see additional details.]]></description>
		
		
		
			</item>
		<item>
		<title>Comparison: Specmatic vs WireMock</title>
		<link>https://specmatic.io/comparisons/comparison-specmatic-vs-wiremock/</link>
		
		<dc:creator><![CDATA[Hari Krishnan]]></dc:creator>
		<pubDate>Sat, 26 Nov 2022 08:34:32 +0000</pubDate>
				<category><![CDATA[Comparisons]]></category>
		<category><![CDATA[Updates]]></category>
		<category><![CDATA[api mocking]]></category>
		<category><![CDATA[Contract Driven Development]]></category>
		<category><![CDATA[Contract Testing]]></category>
		<category><![CDATA[OpenAPI]]></category>
		<category><![CDATA[Specmatic]]></category>
		<category><![CDATA[wiremock]]></category>
		<guid isPermaLink="false">https://specmatic.io/?p=820</guid>

					<description><![CDATA[API mocking is only effective if the mocks are truly representative of the provider / services they are emulating. Deviations between mocks and providers can lead to integration issues much later in the development cycle. In order to avoid such issues it is important to keep in mind that selecting an API mocking tool is not an isolated decision. It has to be in line with your overall microservices development, testing and deployment goals.]]></description>
		
		
		
			</item>
		<item>
		<title>Comparison: Specmatic vs Pact.io and Pactflow.io</title>
		<link>https://specmatic.io/comparisons/specmatic-vs-pact-io-and-pactflow-io/</link>
					<comments>https://specmatic.io/comparisons/specmatic-vs-pact-io-and-pactflow-io/#comments</comments>
		
		<dc:creator><![CDATA[Hari Krishnan]]></dc:creator>
		<pubDate>Tue, 08 Nov 2022 04:25:35 +0000</pubDate>
				<category><![CDATA[Comparisons]]></category>
		<category><![CDATA[Updates]]></category>
		<category><![CDATA[BDCT]]></category>
		<category><![CDATA[Bi-Directional Contract Testing]]></category>
		<category><![CDATA[CDCT]]></category>
		<category><![CDATA[CDD]]></category>
		<category><![CDATA[Consumer Driven Contract Testing]]></category>
		<category><![CDATA[Contract Driven Development]]></category>
		<category><![CDATA[Contract Testing]]></category>
		<category><![CDATA[Integration Testing]]></category>
		<category><![CDATA[OpenAPI]]></category>
		<category><![CDATA[pact]]></category>
		<category><![CDATA[Pactflow]]></category>
		<category><![CDATA[Specmatic]]></category>
		<guid isPermaLink="false">https://specmatic.io/?p=585</guid>

					<description><![CDATA[Specmatic and Contract Driven Development differ significantly from Pact. We built Specmatic out of our own necessity where Pact did not fit the bill for us. We have tried to cover as many areas of comparison as possible, however we would love to hear if you have any other criteria on which you would like to see additional details.]]></description>
		
					<wfw:commentRss>https://specmatic.io/comparisons/specmatic-vs-pact-io-and-pactflow-io/feed/</wfw:commentRss>
			<slash:comments>1</slash:comments>
		
		
			</item>
	</channel>
</rss>
